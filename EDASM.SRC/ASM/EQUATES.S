Name          : EQUATES.S
End of file   :    7,281
This file was generated using the DiskBrowser utility with minimal editing.
It is meant for viewing purposes only.

**************************************************
* Symbol names ending with
* B - buffer
* F - flag
* P - pointer
* S - string (can be p,c or otherwise)
* T - table
*
* This would allow us to give more meaningful abbrv
* to symbol names
*
*=================================================
*
* Indices to access file control tables (FCT)
*
ObjFile     EQU    0
ChnFile     EQU    2
InclFile    EQU    4
MacFile     EQU    6
LstFile     EQU    8
*
* There are flags which describes the
* characteristics of a symbol - ref pg 231
*
undefined   equ    $80
unrefd      equ    $40
relative    equ    $20
external    equ    $10
entry       equ    $08
macro       equ    $04
nosuchlabel equ    $02
fwdrefd     equ    $01
*
* zero page usage
* NB. The contents of $60-$F1 are saved & will be
* restored by the Assembler on exit.
* Some of these locations are re-cycled i.e. they have a
* different meaning when use in another part of the code
*
Z60         EQU    $60
BCDNbr      EQU    $60             ;src file line #s in BCD
StrtSymT    EQU    $63             ;start of symtable
EndSymT     EQU    $65             ;curr end of symtable
PassNbr     EQU    $67             ;pass 1=0, pass 2=1 pass 3=2
ListingF    EQU    $68             ;$80-LST ON
SubTtlF     EQU    $69             ;=$00,$40=SBTL, $FF=SBTL str
LineCnt     EQU    $6A             ;# of printed lines
PageNbr     EQU    $6B
FileNbr     EQU    $6D
LogPL       EQU    $6E             ;logical page len
PhyPL       EQU    $6F             ;physical page len
SavIndX     EQU    $70             ;Temp location to save (X)
ByteCnt     EQU    $70             ;# of generated bytes so far
PrtCol      EQU    $71             ;Printing col
EIStack     EQU    $72             ;EdAsm Interpreter's stack ptr
CancelF     EQU    $73
NbrErrs     EQU    $74             ;# of errors
PrSlot      EQU    $76
AbortF      EQU    $77
SavIndY     EQU    $78             ;Temp location to save (Y)
SrcP        EQU    $79             ;Set to point to somewhere within src line
UnsortedP   EQU    $79             ;Ptr to a record of the unsorted aux work array
Src2P       EQU    $7B             ;Copy of src ptr used during code listing
PC          EQU    $7D             ;position/program counter
SortedP     EQU    $7D             ;Ptr to a record of the sorted aux array
ObjPC       EQU    $7F             ;PC for OBJ code store in mem
SymFBP      EQU    $7F             ;Ptr to a symbol's flag byte field (use during pass1)
CodeLen     EQU    $7F             ;curr len of code image of REL files (stored @ BOF)
AuxAryE     EQU    $7F             ;Ptr to last end of sorted array
FileLen     EQU    $81             ;curr len of BIN/REL file
CurrORG     EQU    $83             ;curr origin addr
SymP        EQU    $85             ;Ptr to symbol
MnemP       EQU    $85             ;Ptr to mnenmonic table entry
Delimitr    EQU    $85             ;Double as delimiter
DTEndCol    EQU    $85             ;end index of DateTime str
StrType     EQU    $86             ;0=DCI -1=ASC
DTCurIdx    EQU    $86             ;curr index into DateTime str
MemTop      EQU    $87
TotLines    EQU    $89             ;3 bytes
VidSlot     EQU    $8C
SaveA       EQU    $8D
SaveY       EQU    $8E
SaveX       EQU    $8F
DskListF    EQU    $90             ;$00,$40,$80-list to txt file
LstDBIdx    EQU    $91             ;LST Data buf index, double as # of chars to write
WinLeft     EQU    $92             ;left & right edges
WinRight    EQU    $93             ;of 40-col window
X6502F      EQU    $94
HighMem     EQU    $95             ;HiMem of generated obj code
ExprAccF    EQU    $97             ;expression's accumulated flag bits
ColCnt      EQU    $97             ;curr print col
SortF       EQU    $98
NxtToken    EQU    $98             ;Flag to indicate nature of next char
LstCodeF    EQU    $99             ;Bits to control listing of machine code
SymRefCh    EQU    $99             ;Preceding char printed b4 symbol's addr
GMC         EQU    $9A             ;$9A-$9D Generated Machine Code buf
IsFwdRef    EQU    $9A             ;Forward ref bit was set
NumCols     EQU    $9B             ;=2,4,6 # of print cols
SymIdx      EQU    $9C             ;Save index into symbol record
ERfield     EQU    $9D             ;Expr Result field
SymAddr     EQU    $9D             ;Addr associated w/symbolicname
ValExpr     EQU    $9F             ;value of expression
RLDEntP     EQU    $9F             ;Ptr to RLD entry
WrkP        EQU    $A1             ;Work ptr to symbol table entry
JJJ         EQU    $9F             ;Running vars used
III         EQU    $A1             ; during sorting
Length      EQU    $A3             ;len of inst => 1-1 byte, 2-2 bytes etc
ModWrdL     EQU    $A4             ;Permitted modes of a 65C02
ModWrdH     EQU    $A5             ; mnemonic/SW16 pseudo opcode
StrtIdx     EQU    $A3             ;Starting index of FOR loop
EndIdx      EQU    $A5             ;Ending Index of FOR loop
LenTIdx     EQU    $A6             ;Index into inst len table
Filler      EQU    $A7             ;byte used to fill reserved storage
SavLstF     EQU    $A7             ;Used to save List flags temporarily
GMCIdx      EQU    $A7             ;Used to index GMC buf during code generation
RadixCh     EQU    $A7             ;Char used to check radix during str2bin conversion
Jump        EQU    $A7             ;Gap btwn 2 elements
SavFByt     EQU    $A7             ;Save symbol's flag byte temporarily
BitsDig     EQU    $A8             ;# of bits/digit-use into bin/octal/hex conversion
LabelF      EQU    $A9             ;Instruction has a label field
RecCnt      EQU    $A9             ;Use to count the # of recs in aux array
NumRecs     EQU    $A9             ;Renamed above label
SubTIdx     EQU    $AA             ;offset into a sub-table of opcode table
ZAB         EQU    $AB
ErrorF      EQU    $AC             ;curr line is flagged as incorrect
ErrTIdx     EQU    $AC             ;Used to index ErrInfo Table
msbF        EQU    $AD
J.TH        EQU    $AB             ;offset/ptr to the j-th/i-th
I.TH        EQU    $AD             ; elements of the aux array
EndianF     EQU    $AE             ;little/big endian flag
Accum       EQU    $AF             ;Main accumulator ($AF-$B0)
NewPC       EQU    $AF             ;Used temporarily by DS directive
SymPJ       EQU    $AF
Ret816F     EQU    $B1             ;-1=16-bits,0-low 8-bits,1-high 8-bits
SymPI       EQU    $B1
RepChar     EQU    $B2             ;char used by REP directive
SymNbr      EQU    $B3             ;# of idfers declared as EXTRN/ENTRY (DEF/RE)
SymLen      EQU    $B3             ;len of symbolic name
SavSTS      EQU    $B3             ;Save start of symbol table
GblAbsF     EQU    $B4             ;Global Abs addr flag $00-ZDEF/ZREF; $01-DEF/REF
DummyF      EQU    $B5             ;dummy section flag
SavPC       EQU    $B6
SavObjPC    EQU    $B8
CodeImgLen  EQU    $B8
CondAsmF    EQU    $BA             ;Conditional Assembly Flag $00,$40,$80
TabTIdx     EQU    $BB             ;Index into Editor's tab table
SymFByte    EQU    $BC             ;Symbol's curr flag byte
RelCodeF    EQU    $BD
DskSrcF     EQU    $BE             ;-1=Disk src file, 0-mem src file
GenF        EQU    $BF             ;N=1-suppress code gen,V=1-disk,V=0-mem
ObjDBIdx    EQU    $C0             ;Gen obj code buf index, double as # of bytes to write
IDskSrcF    EQU    $C1             ;msb=on - stmts fr INCLUDE file
MacroF      EQU    $C2             ;0=not using macros,$40,$06,$04,$80-macro file opened
MParmCnt    EQU    $C3
MacArg      EQU    $C4             ;macro argument 0-9
ZC5         EQU    $C5             ;not used
FCTIndex    EQU    $C6             ;0,2,4,6,8 - Index of File Control tables (FCT)
PathP       EQU    $C7             ;Pathname ptr
SrcPathP    EQU    $C9             ;Curr src filename ptr
RelExprF    EQU    $CB             ;If non-zero, rel addr expr/sub-expr
SavSTE      EQU    $CC             ;temp save for hibyte of EO symbol table
SavSEF      EQU    $CC             ;prev subexpr's RelExprF
NewF        EQU    $CD             ;$80-new file is being assembled
Msg2P       EQU    $CE             ;message ptr
Lower8      EQU    $CE             ;Low 8 bits of 16-bit val
ParmBIdx    EQU    $CE             ;Index into parm string passed by EI
OnOffSW     EQU    $CE             ;$80=ON,$00=FF
SrcP3       EQU    $CE             ;Ptr to partial src line-1
ZCE         EQU    $CE
ZCF         EQU    $CF
SymNodeP    EQU    $CE             ;Use in printing of symbol table
TotCnt      EQU    $CF             ;total # of bytes generated
RLDEnd      EQU    $D0             ;Points to end of Rel dict table (build downwards)
ZD2         EQU    $D2             ;Not used
SavGenF     EQU    $D4             ;Save GenF when DSECT is declared
SBufP       EQU    $D5             ;ptr to SBuf/IBuf data buf
MsgP        EQU    $D5             ;Message ptr
HashIdx     EQU    $D7
PrvSymP     EQU    $D8             ;Ptr to previous symbol's node
NxtSymP     EQU    $DA             ;Ptr to next symbol's node
NumCycles   EQU    $DD             ;instruction's # of cycles
NbrWarns    EQU    $DE             ;2 bytes used
*
* These flags are for the LST directive
* $00-OFF, non-zero=ON
*
LstFlags    EQU    $E0
LstCyc      EQU    $E0             ;cycle times (OFF)
LstUnAsm    EQU    $E1             ;unassembled source (ON)
LstExpMac   EQU    $E2             ;expansion of macro lines (ON)
LstWarns    EQU    $E3             ;warnings (ON)
LstGCode    EQU    $E4             ;generate obj code (OFF)
LstASym     EQU    $E5             ;Alphabetic symbol (ON)
LstVSym     EQU    $E6             ;Value-ordered Symbol (OFF)
Lst6Cols    EQU    $E7             ;6-col symbol dump (OFF)
ZE8         EQU    $E8             ;Was init but not used
SW16F       EQU    $E9
ZPSaveY     EQU    $EA
RndF        EQU    $EC             ;$80-use random data, $00-use filler byte
ErrNbr4     EQU    $EB             ;Err # x 4=index
*
DecimalS    EQU    $ED             ;'0000' 4-byte ASCII str ($ED-$F0)
ZPRetAdr    EQU    $EF
MacPNLen    EQU    $F1             ;Len byte of Maclib prefix/Macro file PathName
*=================================================